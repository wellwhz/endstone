<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classendstone_1_1BlockBreakEvent" kind="class" language="C++" prot="public">
    <compoundname>endstone::BlockBreakEvent</compoundname>
    <basecompoundref refid="classendstone_1_1BlockEvent" prot="public" virt="non-virtual">endstone::BlockEvent</basecompoundref>
    <includes refid="block__break__event_8h" local="no">endstone/event/block/block_break_event.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classendstone_1_1BlockBreakEvent_1a64ca48725564c7fe543234eb464e4cbe" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string endstone::BlockBreakEvent::NAME</definition>
        <argsstring></argsstring>
        <name>NAME</name>
        <initializer>= &quot;BlockBreakEvent&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/event/block/block_break_event.h" line="33" column="37" bodyfile="include/endstone/event/block/block_break_event.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classendstone_1_1BlockBreakEvent_1a327ccc0eed39d688459a71b8a6b809d9" prot="private" static="no" mutable="no">
        <type><ref refid="classendstone_1_1Player" kindref="compound">Player</ref> &amp;</type>
        <definition>Player&amp; endstone::BlockBreakEvent::player_</definition>
        <argsstring></argsstring>
        <name>player_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/event/block/block_break_event.h" line="55" column="12" bodyfile="include/endstone/event/block/block_break_event.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1BlockBreakEvent_1adde7a9bb793265f5b147190769dfaff8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>endstone::BlockBreakEvent::BlockBreakEvent</definition>
        <argsstring>(Block &amp;block, Player &amp;player)</argsstring>
        <name>BlockBreakEvent</name>
        <param>
          <type><ref refid="classendstone_1_1Block" kindref="compound">Block</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="classendstone_1_1Player" kindref="compound">Player</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/event/block/block_break_event.h" line="30" column="14" bodyfile="include/endstone/event/block/block_break_event.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockBreakEvent_1a0c013b5825d1ea1b75eaec4e2e076ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>endstone::BlockBreakEvent::~BlockBreakEvent</definition>
        <argsstring>() override=default</argsstring>
        <name>~BlockBreakEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/event/block/block_break_event.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockBreakEvent_1a51513f05d20b347797c31be3fb6db1d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string endstone::BlockBreakEvent::getEventName</definition>
        <argsstring>() const override</argsstring>
        <name>getEventName</name>
        <reimplements refid="classendstone_1_1Event_1a826fe74f9c4195a36a364b9aeeb321bb">getEventName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a user-friendly identifier for this event.</para>
<para><simplesect kind="return"><para>name of this event </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/event/block/block_break_event.h" line="34" column="18" bodyfile="include/endstone/event/block/block_break_event.h" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockBreakEvent_1ac908a1470e2bcf4a767e5f9e9e327815" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool endstone::BlockBreakEvent::isCancellable</definition>
        <argsstring>() const override</argsstring>
        <name>isCancellable</name>
        <reimplements refid="classendstone_1_1Event_1a8e8cba21dd1527394f600dbf6769a0b9">isCancellable</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the event can be cancelled by a plugin or the server.</para>
<para><simplesect kind="return"><para>true if this event can be cancelled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/event/block/block_break_event.h" line="39" column="11" bodyfile="include/endstone/event/block/block_break_event.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockBreakEvent_1a0992c8dcdec3339ac035abcf6d03a3dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classendstone_1_1Player" kindref="compound">Player</ref> &amp;</type>
        <definition>Player&amp; endstone::BlockBreakEvent::getPlayer</definition>
        <argsstring>() const</argsstring>
        <name>getPlayer</name>
        <briefdescription>
<para>Gets the <ref refid="classendstone_1_1Player" kindref="compound">Player</ref> that is breaking the block involved in this event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classendstone_1_1Player" kindref="compound">Player</ref> that is breaking the block involved in this event </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/event/block/block_break_event.h" line="49" column="13" bodyfile="include/endstone/event/block/block_break_event.h" bodystart="49" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Called when a block is broken by a player. </para>
    </briefdescription>
    <detaileddescription>
<para>If a <ref refid="classendstone_1_1BlockBreakEvent" kindref="compound">BlockBreakEvent</ref> is cancelled, the block will not break and experience will not drop. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>endstone::BlockEvent</label>
        <link refid="classendstone_1_1BlockEvent"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>endstone::Event</label>
        <link refid="classendstone_1_1Event"/>
      </node>
      <node id="1">
        <label>endstone::BlockBreakEvent</label>
        <link refid="classendstone_1_1BlockBreakEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>endstone::BlockEvent</label>
        <link refid="classendstone_1_1BlockEvent"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>endstone::Event</label>
        <link refid="classendstone_1_1Event"/>
      </node>
      <node id="1">
        <label>endstone::BlockBreakEvent</label>
        <link refid="classendstone_1_1BlockBreakEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/endstone/event/block/block_break_event.h" line="28" column="1" bodyfile="include/endstone/event/block/block_break_event.h" bodystart="28" bodyend="56"/>
    <listofallmembers>
      <member refid="classendstone_1_1BlockBreakEvent_1adde7a9bb793265f5b147190769dfaff8" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>BlockBreakEvent</name></member>
      <member refid="classendstone_1_1BlockEvent_1a4f881523c002923dd73bb4ebf4ad6fc0" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>BlockEvent</name></member>
      <member refid="classendstone_1_1Event_1a28cca8d74920493b449d035540acf023" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>Event</name></member>
      <member refid="classendstone_1_1Event_1a7199136ebb40e1441bc61e29f83c3cad" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>Event</name></member>
      <member refid="classendstone_1_1BlockEvent_1ae5bdd3abb11f98e4d3929a6f40bbb26a" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>getBlock</name></member>
      <member refid="classendstone_1_1BlockBreakEvent_1a51513f05d20b347797c31be3fb6db1d2" prot="public" virt="virtual"><scope>endstone::BlockBreakEvent</scope><name>getEventName</name></member>
      <member refid="classendstone_1_1BlockBreakEvent_1a0992c8dcdec3339ac035abcf6d03a3dc" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>getPlayer</name></member>
      <member refid="classendstone_1_1Event_1ae89b54f63dc32b0c8797a59db69b6931" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>isAsynchronous</name></member>
      <member refid="classendstone_1_1BlockBreakEvent_1ac908a1470e2bcf4a767e5f9e9e327815" prot="public" virt="virtual"><scope>endstone::BlockBreakEvent</scope><name>isCancellable</name></member>
      <member refid="classendstone_1_1Event_1a392163d87ff21752806523e050cd10bb" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>isCancelled</name></member>
      <member refid="classendstone_1_1BlockBreakEvent_1a64ca48725564c7fe543234eb464e4cbe" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>NAME</name></member>
      <member refid="classendstone_1_1Event_1ae8dc9a0f7f723981bca4b1d4e5855b47" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>operator=</name></member>
      <member refid="classendstone_1_1BlockBreakEvent_1a327ccc0eed39d688459a71b8a6b809d9" prot="private" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>player_</name></member>
      <member refid="classendstone_1_1Event_1ad52e803ff719bd82e650f3cf06aae614" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>setCancelled</name></member>
      <member refid="classendstone_1_1BlockBreakEvent_1a0c013b5825d1ea1b75eaec4e2e076ee8" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>~BlockBreakEvent</name></member>
      <member refid="classendstone_1_1BlockEvent_1a099e0f2a50354664de1e9f9bfc02d5d7" prot="public" virt="non-virtual"><scope>endstone::BlockBreakEvent</scope><name>~BlockEvent</name></member>
      <member refid="classendstone_1_1Event_1a6aeaa8096baba90f8ace94106e0e05f3" prot="public" virt="virtual"><scope>endstone::BlockBreakEvent</scope><name>~Event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
